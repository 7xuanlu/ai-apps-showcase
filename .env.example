# Environment Configuration Template
# Copy this file to .env.local and fill in your actual values

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# Application environment (development, production, test)
NODE_ENV=development

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# Database provider: "sqlite" for development, "postgresql" for production
DATABASE_PROVIDER="sqlite"

# Database connection URL
# For SQLite (development): file:./dev.db
# For PostgreSQL (production): postgresql://user:password@host:port/database
DATABASE_URL="file:./dev.db"

# =============================================================================
# SUPABASE CONFIGURATION (Production Only)
# =============================================================================

# Supabase project URL (required for production)
# Get this from your Supabase project dashboard
SUPABASE_URL="https://your-project-id.supabase.co"

# Supabase anonymous key (required for production)
# Get this from your Supabase project API settings
SUPABASE_ANON_KEY="your-supabase-anon-key"

# Supabase service role key (optional, for admin operations)
# Get this from your Supabase project API settings
SUPABASE_SERVICE_ROLE_KEY="your-supabase-service-role-key"

# =============================================================================
# AUTHENTICATION CONFIGURATION
# =============================================================================

# NextAuth.js configuration
# For development: http://localhost:3000
# For production: https://your-domain.com
NEXTAUTH_URL="http://localhost:3000"

# NextAuth.js secret key (generate with: openssl rand -base64 32)
# This should be a random string for security
NEXTAUTH_SECRET="your-nextauth-secret-key"

# =============================================================================
# OAUTH PROVIDERS (Optional)
# =============================================================================

# Google OAuth Configuration
# Get these from Google Cloud Console
# GOOGLE_CLIENT_ID="your-google-client-id"
# GOOGLE_CLIENT_SECRET="your-google-client-secret"

# GitHub OAuth Configuration  
# Get these from GitHub Developer Settings
# GITHUB_CLIENT_ID="your-github-client-id"
# GITHUB_CLIENT_SECRET="your-github-client-secret"

# =============================================================================
# EXTERNAL SERVICES (Optional)
# =============================================================================

# Azure Speech Service Configuration
# Get these from Azure Cognitive Services
# SPEECH_SERVICE_SUBSCRIPTION_KEY="your-speech-service-key"
# SPEECH_SERVICE_SUBSCRIPTION_REGION="your-speech-service-region"

# =============================================================================
# DEVELOPMENT NOTES
# =============================================================================

# Development Setup:
# 1. Copy this file to .env.local
# 2. Set DATABASE_PROVIDER="sqlite" and DATABASE_URL="file:./dev.db"
# 3. Generate NEXTAUTH_SECRET with: openssl rand -base64 32
# 4. Configure OAuth providers if needed
# 5. Run: npm run db:generate-schema:sqlite
# 6. Run: npm run prisma:migrate:dev

# Production Setup (Vercel + Supabase):
# 1. Create Supabase project and get URL/keys
# 2. Set DATABASE_PROVIDER="postgresql" 
# 3. Set DATABASE_URL to your Supabase connection string
# 4. Configure all SUPABASE_* variables
# 5. Set NEXTAUTH_URL to your production domain
# 6. Configure OAuth providers with production URLs
# 7. Set all environment variables in Vercel dashboard

# =============================================================================
# SECURITY NOTES
# =============================================================================

# - Never commit .env.local or .env files to version control
# - Use strong, unique values for all secret keys
# - Rotate secrets regularly in production
# - Use different OAuth credentials for development and production
# - Enable SSL/TLS for all production database connections